openapi: 3.0.1
info:
  title: OAuth API
  description: OAuth API
  contact:
    name: WSO2
    url: http://wso2.com/products/api-manager/
    email: architecture@wso2.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
paths:
  /authorize:
    get:
      tags:
      - OAuth Authorization
      parameters:
      - name: response_type
        in: query
        description: Expected response type
        required: true
        schema:
          type: string
      - name: client_id
        in: query
        description: OAuth client identifier
        required: true
        schema:
          type: string
      - name: redirect_uri
        in: query
        description: Clients redirection endpoint
        schema:
          type: string
      - name: scope
        in: query
        description: OAuth scopes
        schema:
          type: string
      - name: state
        in: query
        description: Opaque value used by the client to maintain state between the
          request and callback
        schema:
          type: string
      responses:
        302:
          description: Response from authorization endpoint
          headers:
            Location:
              schema:
                type: string
          content: {}
  /token:
    post:
      tags:
      - OAuth Token
      parameters:
      - name: Authorization
        in: header
        description: Authentication scheme header
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - grant_type
              properties:
                grant_type:
                  type: string
                  description: Required OAuth grant type
                code:
                  type: string
                  description: Authorization code to be sent for authorization grant
                    type
                redirect_uri:
                  type: string
                  description: Clients redirection endpoint
                client_id:
                  type: string
                  description: OAuth client identifier
                client_secret:
                  type: string
                  description: OAuth client secret
                refresh_token:
                  type: string
                  description: Refresh token issued to the client.
                scope:
                  type: string
                  description: OAuth scopes
                username:
                  type: string
                  description: username
                password:
                  type: string
                  description: password
                validity_period:
                  type: integer
                  description: Validity period of token
                  format: int64
        required: true
      responses:
        200:
          description: |
            OK.
            Successful response from token endpoint.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        400:
          description: |
            Bad Request.
            Error response from token endpoint due to malformed request.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenErrorResponse'
        401:
          description: |
            Unauthorized.
            Error response from token endpoint due to client authentication failure.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenErrorResponse'
  /keys:
    get:
      tags:
      - JWK Key Set.
      responses:
        200:
          description: "Signing key List"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JWKList"

  /register:
    post:
      tags:
      - OAuth2 DCR
      summary: |
        Registers an OAuth2 application
      operationId: registerApplication
      requestBody:
        description: Application information to register.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registrationRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /register/{client_id}:
    get:
      tags:
      - OAuth2 DCR
      summary: |
        Get OAuth2 application information
      description: |
        This API is used to get/retrieve an OAuth2 application by client_id.
      operationId: getApplication
      parameters:
      - name: client_id
        in: path
        description: Unique identifier of the OAuth2 client application.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
      - OAuth2 DCR
      summary: |
        Updates an OAuth2 application
      description: |
        This API is used to update an OAuth2 application.
      operationId: updateApplication
      parameters:
      - name: client_id
        in: path
        description: Unique identifier for the OAuth2 client application.
        required: true
        schema:
          type: string
      requestBody:
        description: Application information to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        required: true
      responses:
        200:
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
      - OAuth2 DCR
      summary: |
        Delete OAuth2 application
      description: |
        This API is used to delete an OAuth2 application by client_id.
      operationId: deleteApplication
      parameters:
      - name: client_id
        in: path
        description: Unique identifier of the OAuth2 client application.
        required: true
        schema:
          type: string
      responses:
        204:
          description: Successfully deleted
          content: {}
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

components:
  schemas:
    TokenResponse:
      title: Successful response sent for OAuth token request.
      required:
      - access_token
      - token_type
      type: object
      properties:
        access_token:
          type: string
          description: |
            OAuth access tokn issues by authorization server.
        token_type:
          type: string
          description: |
            The type of the token issued.
        expires_in:
          type: integer
          description: |
            The lifetime in seconds of the access token.
          format: int64
        refresh_token:
          type: string
          description: |
            OPTIONAL.
            The refresh token, which can be used to obtain new access tokens.
        scope:
          type: string
          description: |
            The scope of the access token requested.
    TokenErrorResponse:
      title: Error response sent for OAuth token request.
      required:
      - preProcessingError
      type: object
      properties:
        preProcessingError:
          type: string
          description: Error code classifying the type of preProcessingError.
    JWKList:
      title: Signing keys.
      type: object
      properties:
        keys:
          type: object
          properties:
            kid:
              type: string
              example: "123-456"
            kty:
              type: string 
              example: "RSA"
            use:
              type: string
              example: "sig"
            key_ops:
              items:
                type: string
                example: "sign"
            alg:
              type: string
              example: "RS256"
            x5u:
              type: string
              example: "GxQ9K-sxpsH487eSkJ7lE_SQodk"
            x5c:             
              items:
                type: string
                example: "MIIB/zCCAYYCCQDS7UWmBdQtETAJ0mN0TZL7/MaY..."
            x5t:
              type: string
              example: "M_1dx8imEzVJDo3iFzJOHLvqcef"
            x5t#S256:
              type: string
            e:
              type: string
              example: "AQAB"
            n:
              type: string
              example: "qTPyNqAh1Uwz_ZolFsBdYwKYKjCyTje3mN5A5AOuxUvelz_B5aGwgTnU9A6vlszHfjOl"
            x: 
              type: string
              example: "MKBCTNIcKUSDii11ySs3526iDZ8AiTo7Tu6KPAqv7D4"
            y: 
              type: string
              example: "MKBCTNIcKUSDii11ySs3526iDZ8AiTo7Tu6KPAqv7D4"
            d: 
              type: string
              example: "MKBCTNIcKUSDii11ySs3526iDZ8AiTo7Tu6KPAqv7D4"                            
            p:
              type: string
              example: "MKBCTNIcKUSDii11ySs3526iDZ8AiTo7Tu6KPAqv7D4"                            
            q:
              type: string
              example: "MKBCTNIcKUSDii11ySs3526iDZ8AiTo7Tu6KPAqv7D4"                            
            dp:
              type: string
              example: "MKBCTNIcKUSDii11ySs3526iDZ8AiTo7Tu6KPAqv7D4"                            
            dq:
              type: string
              example: "MKBCTNIcKUSDii11ySs3526iDZ8AiTo7Tu6KPAqv7D4"                            
            qi:
              type: string
              example: "MKBCTNIcKUSDii11ySs3526iDZ8AiTo7Tu6KPAqv7D4"                            
            k:
              type: string
              example: "GawgguFyGrWKav7AX4VKUg"                            
    registrationRequest:
      required:
      - client_name
      - redirect_uris
      type: object
      properties:
        redirect_uris:
          type: array
          items:
            type: string
        client_name:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        grant_types:
          type: array
          items:
            type: string
        application_type:
          type: string
        response_types:
          type: array
          items:
            type: string
    updateRequest:
      type: object
      properties:
        redirect_uris:
          type: array
          items:
            type: string
        client_name:
          type: string
        grant_types:
          type: array
          items:
            type: string
    application:
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
        redirect_uris:
          type: array
          items:
            type: string
        grant_types:
          type: array
          items:
            type: string
        client_name:
          type: string
    error:
      type: object
      properties:
        error:
          type: string
        error_description:
          type: string
