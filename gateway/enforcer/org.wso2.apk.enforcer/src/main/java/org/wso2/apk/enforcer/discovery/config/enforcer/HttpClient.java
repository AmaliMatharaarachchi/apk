// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/config/enforcer/client.proto

package org.wso2.apk.enforcer.discovery.config.enforcer;

/**
 * <pre>
 * Model for enforcer management user
 * </pre>
 *
 * Protobuf type {@code wso2.discovery.config.enforcer.HttpClient}
 */
public final class HttpClient extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:wso2.discovery.config.enforcer.HttpClient)
    HttpClientOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HttpClient.newBuilder() to construct.
  private HttpClient(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HttpClient() {
    hostnameVerifier_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new HttpClient();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HttpClient(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            skipSSl_ = input.readBool();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            hostnameVerifier_ = s;
            break;
          }
          case 24: {

            maxTotalConnections_ = input.readInt32();
            break;
          }
          case 32: {

            maxConnectionsPerRoute_ = input.readInt32();
            break;
          }
          case 40: {

            connectTimeout_ = input.readInt32();
            break;
          }
          case 48: {

            socketTimeout_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.wso2.apk.enforcer.discovery.config.enforcer.HttpClientProto.internal_static_wso2_discovery_config_enforcer_HttpClient_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.wso2.apk.enforcer.discovery.config.enforcer.HttpClientProto.internal_static_wso2_discovery_config_enforcer_HttpClient_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient.class, org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient.Builder.class);
  }

  public static final int SKIPSSL_FIELD_NUMBER = 1;
  private boolean skipSSl_;
  /**
   * <pre>
   * Disable SSL Verification
   * </pre>
   *
   * <code>bool skipSSl = 1;</code>
   * @return The skipSSl.
   */
  @java.lang.Override
  public boolean getSkipSSl() {
    return skipSSl_;
  }

  public static final int HOSTNAMEVERIFIER_FIELD_NUMBER = 2;
  private volatile java.lang.Object hostnameVerifier_;
  /**
   * <pre>
   * Hostname Verifier
   * </pre>
   *
   * <code>string hostnameVerifier = 2;</code>
   * @return The hostnameVerifier.
   */
  @java.lang.Override
  public java.lang.String getHostnameVerifier() {
    java.lang.Object ref = hostnameVerifier_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      hostnameVerifier_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Hostname Verifier
   * </pre>
   *
   * <code>string hostnameVerifier = 2;</code>
   * @return The bytes for hostnameVerifier.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHostnameVerifierBytes() {
    java.lang.Object ref = hostnameVerifier_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      hostnameVerifier_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAXTOTALCONNECTIONS_FIELD_NUMBER = 3;
  private int maxTotalConnections_;
  /**
   * <pre>
   * MaxtotalConnections
   * </pre>
   *
   * <code>int32 maxTotalConnections = 3;</code>
   * @return The maxTotalConnections.
   */
  @java.lang.Override
  public int getMaxTotalConnections() {
    return maxTotalConnections_;
  }

  public static final int MAXCONNECTIONSPERROUTE_FIELD_NUMBER = 4;
  private int maxConnectionsPerRoute_;
  /**
   * <pre>
   * MaxConnectionsPerRoute
   * </pre>
   *
   * <code>int32 maxConnectionsPerRoute = 4;</code>
   * @return The maxConnectionsPerRoute.
   */
  @java.lang.Override
  public int getMaxConnectionsPerRoute() {
    return maxConnectionsPerRoute_;
  }

  public static final int CONNECTTIMEOUT_FIELD_NUMBER = 5;
  private int connectTimeout_;
  /**
   * <pre>
   * ConnectTimeout
   * </pre>
   *
   * <code>int32 connectTimeout = 5;</code>
   * @return The connectTimeout.
   */
  @java.lang.Override
  public int getConnectTimeout() {
    return connectTimeout_;
  }

  public static final int SOCKETTIMEOUT_FIELD_NUMBER = 6;
  private int socketTimeout_;
  /**
   * <pre>
   * SocketTimeout
   * </pre>
   *
   * <code>int32 socketTimeout = 6;</code>
   * @return The socketTimeout.
   */
  @java.lang.Override
  public int getSocketTimeout() {
    return socketTimeout_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (skipSSl_ != false) {
      output.writeBool(1, skipSSl_);
    }
    if (!getHostnameVerifierBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, hostnameVerifier_);
    }
    if (maxTotalConnections_ != 0) {
      output.writeInt32(3, maxTotalConnections_);
    }
    if (maxConnectionsPerRoute_ != 0) {
      output.writeInt32(4, maxConnectionsPerRoute_);
    }
    if (connectTimeout_ != 0) {
      output.writeInt32(5, connectTimeout_);
    }
    if (socketTimeout_ != 0) {
      output.writeInt32(6, socketTimeout_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (skipSSl_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, skipSSl_);
    }
    if (!getHostnameVerifierBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, hostnameVerifier_);
    }
    if (maxTotalConnections_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, maxTotalConnections_);
    }
    if (maxConnectionsPerRoute_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, maxConnectionsPerRoute_);
    }
    if (connectTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, connectTimeout_);
    }
    if (socketTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, socketTimeout_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient)) {
      return super.equals(obj);
    }
    org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient other = (org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient) obj;

    if (getSkipSSl()
        != other.getSkipSSl()) return false;
    if (!getHostnameVerifier()
        .equals(other.getHostnameVerifier())) return false;
    if (getMaxTotalConnections()
        != other.getMaxTotalConnections()) return false;
    if (getMaxConnectionsPerRoute()
        != other.getMaxConnectionsPerRoute()) return false;
    if (getConnectTimeout()
        != other.getConnectTimeout()) return false;
    if (getSocketTimeout()
        != other.getSocketTimeout()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SKIPSSL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSkipSSl());
    hash = (37 * hash) + HOSTNAMEVERIFIER_FIELD_NUMBER;
    hash = (53 * hash) + getHostnameVerifier().hashCode();
    hash = (37 * hash) + MAXTOTALCONNECTIONS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxTotalConnections();
    hash = (37 * hash) + MAXCONNECTIONSPERROUTE_FIELD_NUMBER;
    hash = (53 * hash) + getMaxConnectionsPerRoute();
    hash = (37 * hash) + CONNECTTIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getConnectTimeout();
    hash = (37 * hash) + SOCKETTIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getSocketTimeout();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Model for enforcer management user
   * </pre>
   *
   * Protobuf type {@code wso2.discovery.config.enforcer.HttpClient}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:wso2.discovery.config.enforcer.HttpClient)
      org.wso2.apk.enforcer.discovery.config.enforcer.HttpClientOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.wso2.apk.enforcer.discovery.config.enforcer.HttpClientProto.internal_static_wso2_discovery_config_enforcer_HttpClient_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.wso2.apk.enforcer.discovery.config.enforcer.HttpClientProto.internal_static_wso2_discovery_config_enforcer_HttpClient_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient.class, org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient.Builder.class);
    }

    // Construct using org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      skipSSl_ = false;

      hostnameVerifier_ = "";

      maxTotalConnections_ = 0;

      maxConnectionsPerRoute_ = 0;

      connectTimeout_ = 0;

      socketTimeout_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.wso2.apk.enforcer.discovery.config.enforcer.HttpClientProto.internal_static_wso2_discovery_config_enforcer_HttpClient_descriptor;
    }

    @java.lang.Override
    public org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient getDefaultInstanceForType() {
      return org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient.getDefaultInstance();
    }

    @java.lang.Override
    public org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient build() {
      org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient buildPartial() {
      org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient result = new org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient(this);
      result.skipSSl_ = skipSSl_;
      result.hostnameVerifier_ = hostnameVerifier_;
      result.maxTotalConnections_ = maxTotalConnections_;
      result.maxConnectionsPerRoute_ = maxConnectionsPerRoute_;
      result.connectTimeout_ = connectTimeout_;
      result.socketTimeout_ = socketTimeout_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient) {
        return mergeFrom((org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient other) {
      if (other == org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient.getDefaultInstance()) return this;
      if (other.getSkipSSl() != false) {
        setSkipSSl(other.getSkipSSl());
      }
      if (!other.getHostnameVerifier().isEmpty()) {
        hostnameVerifier_ = other.hostnameVerifier_;
        onChanged();
      }
      if (other.getMaxTotalConnections() != 0) {
        setMaxTotalConnections(other.getMaxTotalConnections());
      }
      if (other.getMaxConnectionsPerRoute() != 0) {
        setMaxConnectionsPerRoute(other.getMaxConnectionsPerRoute());
      }
      if (other.getConnectTimeout() != 0) {
        setConnectTimeout(other.getConnectTimeout());
      }
      if (other.getSocketTimeout() != 0) {
        setSocketTimeout(other.getSocketTimeout());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean skipSSl_ ;
    /**
     * <pre>
     * Disable SSL Verification
     * </pre>
     *
     * <code>bool skipSSl = 1;</code>
     * @return The skipSSl.
     */
    @java.lang.Override
    public boolean getSkipSSl() {
      return skipSSl_;
    }
    /**
     * <pre>
     * Disable SSL Verification
     * </pre>
     *
     * <code>bool skipSSl = 1;</code>
     * @param value The skipSSl to set.
     * @return This builder for chaining.
     */
    public Builder setSkipSSl(boolean value) {
      
      skipSSl_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Disable SSL Verification
     * </pre>
     *
     * <code>bool skipSSl = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSkipSSl() {
      
      skipSSl_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object hostnameVerifier_ = "";
    /**
     * <pre>
     * Hostname Verifier
     * </pre>
     *
     * <code>string hostnameVerifier = 2;</code>
     * @return The hostnameVerifier.
     */
    public java.lang.String getHostnameVerifier() {
      java.lang.Object ref = hostnameVerifier_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hostnameVerifier_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Hostname Verifier
     * </pre>
     *
     * <code>string hostnameVerifier = 2;</code>
     * @return The bytes for hostnameVerifier.
     */
    public com.google.protobuf.ByteString
        getHostnameVerifierBytes() {
      java.lang.Object ref = hostnameVerifier_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostnameVerifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Hostname Verifier
     * </pre>
     *
     * <code>string hostnameVerifier = 2;</code>
     * @param value The hostnameVerifier to set.
     * @return This builder for chaining.
     */
    public Builder setHostnameVerifier(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hostnameVerifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Hostname Verifier
     * </pre>
     *
     * <code>string hostnameVerifier = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearHostnameVerifier() {
      
      hostnameVerifier_ = getDefaultInstance().getHostnameVerifier();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Hostname Verifier
     * </pre>
     *
     * <code>string hostnameVerifier = 2;</code>
     * @param value The bytes for hostnameVerifier to set.
     * @return This builder for chaining.
     */
    public Builder setHostnameVerifierBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      hostnameVerifier_ = value;
      onChanged();
      return this;
    }

    private int maxTotalConnections_ ;
    /**
     * <pre>
     * MaxtotalConnections
     * </pre>
     *
     * <code>int32 maxTotalConnections = 3;</code>
     * @return The maxTotalConnections.
     */
    @java.lang.Override
    public int getMaxTotalConnections() {
      return maxTotalConnections_;
    }
    /**
     * <pre>
     * MaxtotalConnections
     * </pre>
     *
     * <code>int32 maxTotalConnections = 3;</code>
     * @param value The maxTotalConnections to set.
     * @return This builder for chaining.
     */
    public Builder setMaxTotalConnections(int value) {
      
      maxTotalConnections_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MaxtotalConnections
     * </pre>
     *
     * <code>int32 maxTotalConnections = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxTotalConnections() {
      
      maxTotalConnections_ = 0;
      onChanged();
      return this;
    }

    private int maxConnectionsPerRoute_ ;
    /**
     * <pre>
     * MaxConnectionsPerRoute
     * </pre>
     *
     * <code>int32 maxConnectionsPerRoute = 4;</code>
     * @return The maxConnectionsPerRoute.
     */
    @java.lang.Override
    public int getMaxConnectionsPerRoute() {
      return maxConnectionsPerRoute_;
    }
    /**
     * <pre>
     * MaxConnectionsPerRoute
     * </pre>
     *
     * <code>int32 maxConnectionsPerRoute = 4;</code>
     * @param value The maxConnectionsPerRoute to set.
     * @return This builder for chaining.
     */
    public Builder setMaxConnectionsPerRoute(int value) {
      
      maxConnectionsPerRoute_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MaxConnectionsPerRoute
     * </pre>
     *
     * <code>int32 maxConnectionsPerRoute = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxConnectionsPerRoute() {
      
      maxConnectionsPerRoute_ = 0;
      onChanged();
      return this;
    }

    private int connectTimeout_ ;
    /**
     * <pre>
     * ConnectTimeout
     * </pre>
     *
     * <code>int32 connectTimeout = 5;</code>
     * @return The connectTimeout.
     */
    @java.lang.Override
    public int getConnectTimeout() {
      return connectTimeout_;
    }
    /**
     * <pre>
     * ConnectTimeout
     * </pre>
     *
     * <code>int32 connectTimeout = 5;</code>
     * @param value The connectTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setConnectTimeout(int value) {
      
      connectTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ConnectTimeout
     * </pre>
     *
     * <code>int32 connectTimeout = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearConnectTimeout() {
      
      connectTimeout_ = 0;
      onChanged();
      return this;
    }

    private int socketTimeout_ ;
    /**
     * <pre>
     * SocketTimeout
     * </pre>
     *
     * <code>int32 socketTimeout = 6;</code>
     * @return The socketTimeout.
     */
    @java.lang.Override
    public int getSocketTimeout() {
      return socketTimeout_;
    }
    /**
     * <pre>
     * SocketTimeout
     * </pre>
     *
     * <code>int32 socketTimeout = 6;</code>
     * @param value The socketTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setSocketTimeout(int value) {
      
      socketTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SocketTimeout
     * </pre>
     *
     * <code>int32 socketTimeout = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSocketTimeout() {
      
      socketTimeout_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:wso2.discovery.config.enforcer.HttpClient)
  }

  // @@protoc_insertion_point(class_scope:wso2.discovery.config.enforcer.HttpClient)
  private static final org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient();
  }

  public static org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HttpClient>
      PARSER = new com.google.protobuf.AbstractParser<HttpClient>() {
    @java.lang.Override
    public HttpClient parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new HttpClient(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HttpClient> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HttpClient> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.wso2.apk.enforcer.discovery.config.enforcer.HttpClient getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

